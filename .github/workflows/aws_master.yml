name: Build Deploy to Production

on:
  push:
    branches: [ master ]

permissions:
  id-token: write
  contents: read

env:
  HOST: platform.vee.codes
  NAMESPACE: vkpr

jobs:
  deploy-prod:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Getting versions
        run: |
          echo "app_version=$(jq -r '.version' package.json)" >> $GITHUB_ENV

      - name: Load environment variables
        run: |
          cat > '.env' <<EOT
          NEXT_PUBLIC_ANALYTICS_ID=${{ secrets.ANALYTICS_ID }}
          NEXT_PUBLIC_LAMBDA_BASE_URL=${{ secrets.LAMBDA_BASE_URL }}
          NEXT_PUBLIC_LAMBDA_API_KEY=${{ secrets.LAMBDA_API_KEY }}
          NEXT_PUBLIC_GOOGLE_TAG_MANAGER=${{ secrets.GOOGLE_TAG_MANAGER}}
          NEXT_PUBLIC_NEUROLEAD_ID=${{ secrets.NEUROLEAD_ID}}
          NEXT_PUBLIC_HOST_URL="https://${{ env.HOST }}"
          EOT
          sed -i 's/[[:space:]]//g' .env
         
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: veecode/landing-page:${{ env.app_version }},veecode/landing-page:latest
  
      - name: Setting up kubectl client
        uses: azure/setup-kubectl@v4
  
      - name: Update landing-page deployment
        shell: bash
        run: |
          echo "${{ secrets.KUBECONFIG }}" > ./config
          export KUBECONFIG=./config

          yq e ".spec.template.spec.containers[0].image = \"veecode/landing-page:${{ env.app_version }}\"" -i ./k8s/deployment.yaml
          yq e '''
          .spec.rules[0].host=strenv(HOST)
          ''' -i ./k8s/ingress.yaml
          
          kubectl create secret generic landing-page-secret --from-env-file=.env -n ${{ env.NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -
          kubectl apply -f ./k8s/ -n ${{ env.NAMESPACE }}
          kubectl rollout restart deployment/landing-page -n ${{ env.NAMESPACE }}
