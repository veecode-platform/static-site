name: Build Deploy to Homolog

on:
  push:
    branches: [homolog]
#  pull_request:
#    branches: [ homolog ]

permissions:
  id-token: write
  contents: read
env:
  HOST: landing-page.apr.vee.codes
  NAMESPACE: veecode-homolog

jobs:
  deploy-hml:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Getting versions
        run: |
          echo "app_version=$(jq -r '.version' package.json)" >> $GITHUB_ENV

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Load environment variables
        run: |
          cat > '.env' <<EOT
          NEXT_PUBLIC_ANALYTICS_ID=${{ secrets.ANALYTICS_ID }}
          NEXT_PUBLIC_LAMBDA_BASE_URL=${{ secrets.LAMBDA_BASE_URL_HOMOLOG }}
          NEXT_PUBLIC_LAMBDA_API_KEY=${{ secrets.LAMBDA_API_KEY_HOMOLOG }}
          NEXT_PUBLIC_GOOGLE_TAG_MANAGER=${{ secrets.GOOGLE_TAG_MANAGER}}
          NEXT_PUBLIC_NEUROLEAD_ID=${{ secrets.NEUROLEAD_ID}}
          NEXT_PUBLIC_HOST_URL="https://${{ env.HOST }}"
          EOT
          sed -i 's/[[:space:]]//g' .env
  
      # - name: Build and push
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     push: true
      #     tags: veecode/landing-page:homolog

      - name: Setting up kubectl client
        uses: azure/setup-kubectl@v4

      - name: GitHub Action for DigitalOcean - doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_TOKEN }}

      - name: Getting k8s credentials
        run: doctl kubernetes cluster kubeconfig save ${{ secrets.CLUSTER_NAME }}

      - name: Update landing-page deployment
        shell: bash
        run: |
          yq e '''
          .spec.template.spec.containers[0].image = "veecode/landing-page:homolog" |
          .spec.template.spec.containers[0].imagePullPolicy="Always"
          ''' -i ./k8s/deployment.yaml
          yq e '''
          .spec.rules[0].host=strenv(HOST) |
          .spec.tls[0].hosts=[strenv(HOST)],.spec.tls[0].secretName="landing-page-secret" |
          .metadata.annotations."kubernetes.io/tls-acme"="true"
          ''' -i ./k8s/ingress.yaml
    
          # kubectl create secret generic landing-page-secret --from-env-file=.env -n ${{ env.NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -
          # kubectl apply -f ./k8s/ -n ${{ env.NAMESPACE }}
          # kubectl rollout restart deployment/landing-page -n ${{ env.NAMESPACE }}
          echo "--------- ingress ---------"
          cat ./k8s/ingress.yaml
          echo "--------- deployment ---------"
          cat ./k8s/deployment.yaml
      # - name: Deploy static site to S3 bucket
      #   run: |
      #     aws s3 rm s3://${{ secrets.AWS_BUCKET_HML }} --recursive
      #     aws s3 sync out s3://${{ secrets.AWS_BUCKET_HML }} --acl public-read
      # - name: Homolog docs URL
      #   run: |
      #     echo "http://homolog.platform.vee.codes.s3-website-us-east-1.amazonaws.com/"
